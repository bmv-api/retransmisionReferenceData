/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bursatec.referencedata.retransmision.server.api;

import java.util.List;

import com.bursatec.referencedata.retransmision.server.model.ReferenceData;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-27T22:57:54.477Z")

@Api(value = "v1", description = "the v1 API")
public interface V1Api {

    @ApiOperation(value = "Request retransmission of Reference Data", nickname = "v1ReferenceDataRetransmitGet", notes = "<p>Reference data retransmission mechanism to request a minimum of 1 and a maximum of 30 records.</p><p>(endId - startId + 1), must be between 1 and 30</p>", response = ReferenceData.class, responseContainer = "List", tags={ "Client", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ReferenceData.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Unauthorized - Authorization information is missing or invalid."),
        @ApiResponse(code = 402, message = "Invalid startId supplied"),
        @ApiResponse(code = 403, message = "Invalid endId supplied"),
        @ApiResponse(code = 404, message = "Range invalid (endId - startId + 1), must be between 1 and 30"),
        @ApiResponse(code = 405, message = "Data not found"),
        @ApiResponse(code = 500, message = "Unexpected error, internal error.") })
    @RequestMapping(value = "/v1/referenceData/retransmit",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ReferenceData>> v1ReferenceDataRetransmitGet(@NotNull @ApiParam(value = "The user name for login", required = true) @Valid @RequestParam(value = "userid", required = true) String userid,@NotNull @ApiParam(value = "MD5 digest of password", required = true) @Valid @RequestParam(value = "password", required = true) String password,@NotNull @ApiParam(value = "Initial (Inclusive) Id to retransmit", required = true) @Valid @RequestParam(value = "startId", required = true) Long startId,@NotNull @ApiParam(value = "End (Inclusive) Id to retransmit", required = true) @Valid @RequestParam(value = "endId", required = true) Long endId);

}
